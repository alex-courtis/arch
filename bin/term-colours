#!/bin/zsh

usage() {
	printf "usage: colours [-f]\n"
	exit 0
}

if [ $# -gt 1 ]; then
	usage
elif [ $# -eq 1 ]; then
	case "${1}" in
		"-f")
			FULL="true"
			;;
		*)
			printf "usage: colours [-f]\n"
			exit 0
			;;
	esac
fi

# Gives a color $1/255 % along HSV
# Who knows what happens when $1 is outside 0-255
# Prints "$red $green $blue" where
# $red $green and $blue are integers
# ranging between 0 and 255 inclusive
rainbow_color()
{
	typeset -i h=$1/43
	typeset -i f=$1-43*$h
	typeset -i t=$f*255/43
	typeset -i q=255-t

	if [ $h -eq 0 ]
	then
		printf "255 $t 0"
	elif [ $h -eq 1 ]
	then
		printf "$q 255 0"
	elif [ $h -eq 2 ]
	then
		printf "0 255 $t"
	elif [ $h -eq 3 ]
	then
		printf "0 $q 255"
	elif [ $h -eq 4 ]
	then
		printf "$t 0 255"
	elif [ $h -eq 5 ]
	then
		printf "255 0 $q"
	else
		# execution should never reach here
		printf "0 0 0"
	fi
}

rgb_cell() {
	printf "\033[48;2;%d;%d;%dm \033[m" "$1" "$2" "$3"
}

rgb_block_fg() {
	printf "\033[38;2;%d;%d;%dm %-9s\033[m" "$1" "$2" "$3" "$4"
}

rgb_block_bg() {
	printf "\033[48;2;%d;%d;%dm %-9s\033[m" "$1" "$2" "$3" "$4"
}

ansi_256_block_fg() {
	printf "\033[38;5;%dm %-9s\033[0m" "$1" "$2"
}

ansi_256_block_bg() {
	printf "\033[48;5;%dm %-9s\033[0m" "$1" "$2"
}

ansi_256_blocks_fg() {
	for i in $(seq $1 $(( $1 + $2))); do
		ansi_256_block_fg "$i" "$i"
	done
	printf "\n"
}

ansi_256_blocks_bg() {
	for i in $(seq $1 $(( $1 + $2))); do
		ansi_256_block_bg "$i" "$i"
	done
	printf "\n"
}

if [ "${FULL}" = "true" ]; then
	printf "\nRGB red spectrum:\n"
	for i in $(seq 0 1 127); do
		rgb_cell $i 0 0
	done
	printf "\n"
	for i in $(seq 255 -1 128); do
		rgb_cell $i 0 0
	done
	printf "\n"

	printf "\nRGB green spectrum:\n"
	for i in $(seq 0 1 127); do
		rgb_cell 0 $i 0
	done
	printf "\n"
	for i in $(seq 255 -1 128); do
		rgb_cell 0 $i 0
	done
	printf "\n"

	printf "\nRGB blue spectrum:\n"
	for i in $(seq 0 1 127); do
		rgb_cell 0 0 $i
	done
	printf "\n"
	for i in $(seq 255 -1 128); do
		rgb_cell 0 0 $i
	done
	printf "\n"

	printf "\nRGB rainbow spectrum:\n"
	for i in $(seq 0 1 127); do
		rgb_cell $(rainbow_color $i)
	done
	printf "\n"
	for i in $(seq 255 -1 128); do
		rgb_cell $(rainbow_color $i)
	done
	printf "\n"

	printf "\nANSI 256 colours:\n"
	# first 16
	for i in $(seq 0 8 8); do
		ansi_256_blocks_fg $i 7
	done

	# 216 cube
	for i in $(seq 16 6 226); do
		ansi_256_blocks_fg $i 5
	done

	# greys
	for i in $(seq 232 8 248); do
		ansi_256_blocks_fg $i 7
	done

	printf "\nANSI 256 colours:\n"
	# first 16
	for i in $(seq 0 8 8); do
		ansi_256_blocks_bg $i 7
	done

	# 216 cube
	for i in $(seq 16 6 226); do
		ansi_256_blocks_bg $i 5
	done

	# greys
	for i in $(seq 232 8 248); do
		ansi_256_blocks_bg $i 7
	done
fi

printf "\nRGB xterm defaults:\n"
rgb_block_bg   0   0   0 "00"
rgb_block_bg 205   0   0 "08"
rgb_block_bg   0 205   0 "0B"
rgb_block_bg 205 205   0 "0A"
rgb_block_bg   0   0 238 "0D"
rgb_block_bg 205   0 205 "0E"
rgb_block_bg   0 205 205 "0C"
rgb_block_bg 229 229 229 "05"
printf "\n"
rgb_block_bg 127 127 127 "03"
rgb_block_bg 255   0   0 "08"
rgb_block_bg   0 255   0 "0B"
rgb_block_bg 255 255   0 "0A"
rgb_block_bg  92  92 255 "0D"
rgb_block_bg 255   0 255 "0E"
rgb_block_bg   0 255 255 "0C"
rgb_block_bg 255 255 255 "07"
printf "\n"


printf "\nRGB base16-default-dark:\n"
rgb_block_bg 0x18 0x18 0x18 "00"
rgb_block_bg 0xab 0x46 0x42 "08"
rgb_block_bg 0xa1 0xb5 0x6c "0B"
rgb_block_bg 0xf7 0xca 0x88 "0A"
rgb_block_bg 0x7c 0xaf 0xc2 "0D"
rgb_block_bg 0xba 0x8b 0xaf "0E"
rgb_block_bg 0x86 0xc1 0xb9 "0C"
rgb_block_bg 0xd8 0xd8 0xd8 "05"
printf "\n"
rgb_block_bg 0x58 0x58 0x58 "03"
rgb_block_bg 0xab 0x46 0x42 "08"
rgb_block_bg 0xa1 0xb5 0x6c "0B"
rgb_block_bg 0xf7 0xca 0x88 "0A"
rgb_block_bg 0x7c 0xaf 0xc2 "0D"
rgb_block_bg 0xba 0x8b 0xaf "0E"
rgb_block_bg 0x86 0xc1 0xb9 "0C"
rgb_block_bg 0xf8 0xf8 0xf8 "07"
printf "\n"
rgb_block_bg 0xdc 0x96 0x56 "09"
rgb_block_bg 0xa1 0x69 0x46 "0F"
rgb_block_bg 0x28 0x28 0x28 "01"
rgb_block_bg 0x38 0x38 0x38 "02"
rgb_block_bg 0xb8 0xb8 0xb8 "04"
rgb_block_bg 0xe8 0xe8 0xe8 "06"
printf "\n"


printf "\nRGB base16-bright:\n"
rgb_block_bg 0x00 0x00 0x00 "00"
rgb_block_bg 0xfb 0x01 0x20 "08"
rgb_block_bg 0xa1 0xc6 0x59 "0B"
rgb_block_bg 0xfd 0xa3 0x31 "0A"
rgb_block_bg 0x6f 0xb3 0xd2 "0D"
rgb_block_bg 0xd3 0x81 0xc3 "0E"
rgb_block_bg 0x76 0xc7 0xb7 "0C"
rgb_block_bg 0xe0 0xe0 0xe0 "05"
printf "\n"
rgb_block_bg 0xb0 0xb0 0xb0 "03"
rgb_block_bg 0xfb 0x01 0x20 "08"
rgb_block_bg 0xa1 0xc6 0x59 "0B"
rgb_block_bg 0xfd 0xa3 0x31 "0A"
rgb_block_bg 0x6f 0xb3 0xd2 "0D"
rgb_block_bg 0xd3 0x81 0xc3 "0E"
rgb_block_bg 0x76 0xc7 0xb7 "0C"
rgb_block_bg 0xff 0xff 0xff "07"
printf "\n"
rgb_block_bg 0xfc 0x6d 0x24 "09"
rgb_block_bg 0xbe 0x64 0x3c "0F"
rgb_block_bg 0x30 0x30 0x30 "01"
rgb_block_bg 0x50 0x50 0x50 "02"
rgb_block_bg 0xd0 0xd0 0xd0 "04"
rgb_block_bg 0xf5 0xf5 0xf5 "06"
printf "\n"


printf "\nANSI 256 current:\n"

# basic 16
ansi_256_block_fg  0 "00"
ansi_256_block_fg  1 "08"
ansi_256_block_fg  2 "0B"
ansi_256_block_fg  3 "0A"
ansi_256_block_fg  4 "0D"
ansi_256_block_fg  5 "0E"
ansi_256_block_fg  6 "0C"
ansi_256_block_fg  7 "05"
printf "\n"
ansi_256_block_fg  8 "03"
ansi_256_block_fg  9 "08"
ansi_256_block_fg 10 "0B"
ansi_256_block_fg 11 "0A"
ansi_256_block_fg 12 "0D"
ansi_256_block_fg 13 "0E"
ansi_256_block_fg 14 "0C"
ansi_256_block_fg 15 "07"
printf "\n"

# base16 extensions
ansi_256_block_fg 16 "09"
ansi_256_block_fg 17 "0F"
ansi_256_block_fg 18 "01"
ansi_256_block_fg 19 "02"
ansi_256_block_fg 20 "04"
ansi_256_block_fg 21 "06"
printf "\n"

printf "\nANSI 256 current:\n"

# basic 16
ansi_256_block_bg  0 "00"
ansi_256_block_bg  1 "08"
ansi_256_block_bg  2 "0B"
ansi_256_block_bg  3 "0A"
ansi_256_block_bg  4 "0D"
ansi_256_block_bg  5 "0E"
ansi_256_block_bg  6 "0C"
ansi_256_block_bg  7 "05"
printf "\n"
ansi_256_block_bg  8 "03"
ansi_256_block_bg  9 "08"
ansi_256_block_bg 10 "0B"
ansi_256_block_bg 11 "0A"
ansi_256_block_bg 12 "0D"
ansi_256_block_bg 13 "0E"
ansi_256_block_bg 14 "0C"
ansi_256_block_bg 15 "07"
printf "\n"

# base16 extensions
ansi_256_block_bg 16 "09"
ansi_256_block_bg 17 "0F"
ansi_256_block_bg 18 "01"
ansi_256_block_bg 19 "02"
ansi_256_block_bg 20 "04"
ansi_256_block_bg 21 "06"
printf "\n"


printf "\n\$HL_FG   "
rgb_block_fg "0x${HL_FG[1,2]}" "0x${HL_FG[3,4]}" "0x${HL_FG[5,6]}" "$HL_FG"
printf "\n\$HL_BG   "
rgb_block_bg "0x${HL_BG[1,2]}" "0x${HL_BG[3,4]}" "0x${HL_BG[5,6]}" "$HL_BG"
printf "\n\$HL_NAME ${HL_NAME}"
printf "\n"


base16()
{
	if [ "${FULL}" = "true" ]; then
		rgb_block_bg "0x${BASE16[$1][1,2]}" "0x${BASE16[$1][3,4]}" "0x${BASE16[$1][5,6]}"
		printf " %3d %3d %3d #%s " "0x${BASE16[$1][1,2]}" "0x${BASE16[$1][3,4]}" "0x${BASE16[$1][5,6]}" "${BASE16[$1]}"
	fi
	printf "%16s %22s %4s " "${2:+[${2}]}" "${4:+[${4}]}" "${3:+[${3}]}"
	rgb_block_bg "0x${BASE16[$1][1,2]}" "0x${BASE16[$1][3,4]}" "0x${BASE16[$1][5,6]}"
	printf " %s\n" "${5:+${BASE16_DESC[$1]}}"
}

printf "\n\$BASE16\n"
base16 "00"             "black"          "00" "default_background"   "desc"
base16 "01"             ""               "01" "lighter_background"   "desc"
base16 "02"             ""               "02" "selection_background" "desc"
base16 "03"             "bright_black"   "03" "comments"             "desc"
base16 "04"             ""               "04" "dark_foreground"      "desc"
base16 "05"             "white"          "05" "default_foreground"   "desc"
base16 "06"             ""               "06" "light_foreground"     "desc"
base16 "07"             "bright_white"   "07" "light_background"     "desc"
base16 "08"             "red"            "08" ""                     "desc"
base16 "09"             "orange"         "09" ""                     "desc"
base16 "0A"             "yellow"         "0A" ""                     "desc"
base16 "0B"             "green"          "0B" ""                     "desc"
base16 "0C"             "cyan"           "0C" ""                     "desc"
base16 "0D"             "blue"           "0D" ""                     "desc"
base16 "0E"             "magenta"        "0E" ""                     "desc"
base16 "0F"             "brown"          "0F" ""                     "desc"
printf "\n"

printf "\n\$BASE16\n"
base16 "00"             "black"          "00" "default_background"
base16 "03"             "bright_black"   "03" "comments"
base16 "08"             "red"            "08"
base16 "bright_red"     "bright_red"     ""
base16 "0B"             "green"          "0B"
base16 "bright_green"   "bright_green"   ""
base16 "0A"             "yellow"         "0A"
base16 "bright_yellow"  "bright_yellow"  ""
base16 "0D"             "blue"           "0D"
base16 "bright_blue"    "bright_blue"    ""
base16 "0E"             "magenta"        "0E"
base16 "bright_magenta" "bright_magenta" ""
base16 "0C"             "cyan"           "0C"
base16 "bright_cyan"    "bright_cyan"    ""
base16 "05"             "white"          "05" "default_foreground"
base16 "07"             "bright_white"   "07" "light_background"

exit 0
